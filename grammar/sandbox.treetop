grammar Sandbox
  rule label
    'Start ' name newline
    (indent? (foo / bar / baz) newline)+
    'End' newline
    {
      def to_hash(n=self)
        if n.respond_to?(:to_hash) && n != self
          n.to_hash
        else
          n.elements ? n.elements.reduce({}) { |s,e| s.merge(to_hash(e)) } : {}
        end
      end
    }
  end

  rule name
    [A-Za-z\._0-9]+ {
      def to_hash
        { name: text_value }
      end
    }
  end

  rule foo
    'foo' { def to_hash; { foo: "present" } end }
  end

  rule bar
    'bar' { def to_hash; { bar: "present" } end }
  end

  rule baz
    'baz' { def to_hash; { baz: "present" } end }
  end

  rule indent
    [\s]+ { def to_hash; {} end }
  end

  rule newline
    [\n] { def to_hash; {} end }
  end

end
